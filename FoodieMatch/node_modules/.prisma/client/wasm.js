
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.NoticeScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  createdAt: 'createdAt',
  isActive: 'isActive'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type',
  duration: 'duration',
  videoUrl: 'videoUrl',
  documentUrl: 'documentUrl',
  color: 'color',
  icon: 'icon',
  isActive: 'isActive'
};

exports.Prisma.UserProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  courseId: 'courseId',
  progress: 'progress',
  completed: 'completed',
  currentStep: 'currentStep',
  timeSpent: 'timeSpent',
  lastAccessed: 'lastAccessed'
};

exports.Prisma.AssessmentScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  question: 'question',
  options: 'options',
  correctAnswer: 'correctAnswer',
  difficulty: 'difficulty'
};

exports.Prisma.UserAssessmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  courseId: 'courseId',
  score: 'score',
  totalQuestions: 'totalQuestions',
  passed: 'passed',
  attemptNumber: 'attemptNumber',
  completedAt: 'completedAt'
};

exports.Prisma.CertificateScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  courseId: 'courseId',
  certificateUrl: 'certificateUrl',
  issuedAt: 'issuedAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.TbmUserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  teamId: 'teamId'
};

exports.Prisma.ChecklistTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  teamId: 'teamId'
};

exports.Prisma.TemplateItemScalarFieldEnum = {
  id: 'id',
  templateId: 'templateId',
  category: 'category',
  subCategory: 'subCategory',
  description: 'description',
  displayOrder: 'displayOrder'
};

exports.Prisma.DailyReportScalarFieldEnum = {
  id: 'id',
  teamId: 'teamId',
  reportDate: 'reportDate',
  managerName: 'managerName',
  remarks: 'remarks'
};

exports.Prisma.ReportDetailScalarFieldEnum = {
  id: 'id',
  reportId: 'reportId',
  itemId: 'itemId',
  checkState: 'checkState'
};

exports.Prisma.ReportSignatureScalarFieldEnum = {
  id: 'id',
  reportId: 'reportId',
  userId: 'userId',
  signedAt: 'signedAt',
  signatureImage: 'signatureImage'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Notice: 'Notice',
  Course: 'Course',
  UserProgress: 'UserProgress',
  Assessment: 'Assessment',
  UserAssessment: 'UserAssessment',
  Certificate: 'Certificate',
  Team: 'Team',
  TbmUser: 'TbmUser',
  ChecklistTemplate: 'ChecklistTemplate',
  TemplateItem: 'TemplateItem',
  DailyReport: 'DailyReport',
  ReportDetail: 'ReportDetail',
  ReportSignature: 'ReportSignature'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/runner/workspace/FoodieMatch/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/runner/workspace/FoodieMatch/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        String   @id @default(uuid())\n  username  String   @unique\n  email     String   @unique\n  password  String\n  role      String   @default(\"user\")\n  createdAt DateTime @default(now())\n}\n\nmodel Notice {\n  id        String   @id @default(uuid())\n  title     String\n  content   String\n  createdAt DateTime @default(now())\n  isActive  Boolean  @default(true)\n}\n\nmodel Course {\n  id              String           @id @default(uuid())\n  title           String\n  description     String\n  type            String\n  duration        Int\n  videoUrl        String?\n  documentUrl     String?\n  color           String           @default(\"blue\")\n  icon            String\n  isActive        Boolean          @default(true)\n  assessments     Assessment[]\n  certificates    Certificate[]\n  userAssessments UserAssessment[]\n  userProgress    UserProgress[]\n}\n\nmodel UserProgress {\n  id           String   @id @default(uuid())\n  userId       String\n  courseId     String\n  progress     Int      @default(0)\n  completed    Boolean  @default(false)\n  currentStep  Int      @default(1)\n  timeSpent    Int      @default(0)\n  lastAccessed DateTime @default(now())\n  course       Course   @relation(fields: [courseId], references: [id])\n\n  @@index([userId])\n  @@index([courseId])\n}\n\nmodel Assessment {\n  id            String @id @default(uuid())\n  courseId      String\n  question      String\n  options       String\n  correctAnswer Int\n  difficulty    String @default(\"medium\")\n  course        Course @relation(fields: [courseId], references: [id])\n\n  @@index([courseId])\n}\n\nmodel UserAssessment {\n  id             String   @id @default(uuid())\n  userId         String\n  courseId       String\n  score          Int\n  totalQuestions Int\n  passed         Boolean\n  attemptNumber  Int      @default(1)\n  completedAt    DateTime @default(now())\n  course         Course   @relation(fields: [courseId], references: [id])\n\n  @@index([userId])\n  @@index([courseId])\n}\n\nmodel Certificate {\n  id             String   @id @default(uuid())\n  userId         String\n  courseId       String\n  certificateUrl String\n  issuedAt       DateTime @default(now())\n  course         Course   @relation(fields: [courseId], references: [id])\n\n  @@index([userId])\n  @@index([courseId])\n}\n\nmodel Team {\n  id                 Int                 @id @default(autoincrement()) @map(\"TeamID\")\n  name               String?             @map(\"TeamName\")\n  checklistTemplates ChecklistTemplate[]\n  dailyReports       DailyReport[]\n  users              TbmUser[]\n\n  @@map(\"Teams\")\n}\n\nmodel TbmUser {\n  id               Int               @id @default(autoincrement()) @map(\"UserID\")\n  name             String?           @map(\"UserName\")\n  teamId           Int               @map(\"TeamID\")\n  reportSignatures ReportSignature[]\n  team             Team              @relation(fields: [teamId], references: [id])\n\n  @@index([teamId])\n  @@map(\"Users\")\n}\n\nmodel ChecklistTemplate {\n  id            Int            @id @default(autoincrement()) @map(\"TemplateID\")\n  name          String?        @map(\"TemplateName\")\n  teamId        Int            @map(\"TeamID\")\n  team          Team           @relation(fields: [teamId], references: [id], onDelete: Cascade)\n  templateItems TemplateItem[]\n\n  @@index([teamId])\n  @@map(\"ChecklistTemplates\")\n}\n\nmodel TemplateItem {\n  id            Int               @id @default(autoincrement()) @map(\"ItemID\")\n  templateId    Int               @map(\"TemplateID\")\n  category      String?           @map(\"Category\")\n  subCategory   String?           @map(\"SubCategory\")\n  description   String?           @map(\"Description\")\n  displayOrder  Int               @default(0) @map(\"DisplayOrder\")\n  reportDetails ReportDetail[]\n  template      ChecklistTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)\n\n  @@index([templateId])\n  @@map(\"TemplateItems\")\n}\n\nmodel DailyReport {\n  id               Int               @id @default(autoincrement()) @map(\"ReportID\")\n  teamId           Int               @map(\"TeamID\")\n  reportDate       DateTime          @map(\"ReportDate\")\n  managerName      String?           @map(\"ManagerName\")\n  remarks          String?           @map(\"Remarks\")\n  team             Team              @relation(fields: [teamId], references: [id], onDelete: Cascade)\n  reportDetails    ReportDetail[]\n  reportSignatures ReportSignature[]\n\n  @@index([teamId])\n  @@map(\"DailyReports\")\n}\n\nmodel ReportDetail {\n  id         Int          @id @default(autoincrement()) @map(\"DetailID\")\n  reportId   Int          @map(\"ReportID\")\n  itemId     Int          @map(\"ItemID\")\n  checkState String?      @map(\"CheckState\")\n  item       TemplateItem @relation(fields: [itemId], references: [id])\n  report     DailyReport  @relation(fields: [reportId], references: [id], onDelete: Cascade)\n\n  @@index([reportId])\n  @@index([itemId])\n  @@map(\"ReportDetails\")\n}\n\nmodel ReportSignature {\n  id             Int         @id @default(autoincrement()) @map(\"SignatureID\")\n  reportId       Int         @map(\"ReportID\")\n  userId         Int         @map(\"UserID\")\n  signedAt       DateTime    @default(now()) @map(\"SignedAt\")\n  signatureImage String?     @map(\"SignatureImage\")\n  report         DailyReport @relation(fields: [reportId], references: [id], onDelete: Cascade)\n  user           TbmUser     @relation(fields: [userId], references: [id])\n\n  @@index([reportId])\n  @@index([userId])\n  @@map(\"ReportSignatures\")\n}\n",
  "inlineSchemaHash": "222016f4dc195c43b7def45dc57bf825d1f4fcd53953c6b05fb6f1c64b514a13",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"videoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"assessments\",\"kind\":\"object\",\"type\":\"Assessment\",\"relationName\":\"AssessmentToCourse\"},{\"name\":\"certificates\",\"kind\":\"object\",\"type\":\"Certificate\",\"relationName\":\"CertificateToCourse\"},{\"name\":\"userAssessments\",\"kind\":\"object\",\"type\":\"UserAssessment\",\"relationName\":\"CourseToUserAssessment\"},{\"name\":\"userProgress\",\"kind\":\"object\",\"type\":\"UserProgress\",\"relationName\":\"CourseToUserProgress\"}],\"dbName\":null},\"UserProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"currentStep\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeSpent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastAccessed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToUserProgress\"}],\"dbName\":null},\"Assessment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"correctAnswer\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"difficulty\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"AssessmentToCourse\"}],\"dbName\":null},\"UserAssessment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalQuestions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"attemptNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToUserAssessment\"}],\"dbName\":null},\"Certificate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificateUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issuedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CertificateToCourse\"}],\"dbName\":null},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"TeamID\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"TeamName\"},{\"name\":\"checklistTemplates\",\"kind\":\"object\",\"type\":\"ChecklistTemplate\",\"relationName\":\"ChecklistTemplateToTeam\"},{\"name\":\"dailyReports\",\"kind\":\"object\",\"type\":\"DailyReport\",\"relationName\":\"DailyReportToTeam\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"TbmUser\",\"relationName\":\"TbmUserToTeam\"}],\"dbName\":\"Teams\"},\"TbmUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"UserID\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"UserName\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"TeamID\"},{\"name\":\"reportSignatures\",\"kind\":\"object\",\"type\":\"ReportSignature\",\"relationName\":\"ReportSignatureToTbmUser\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"TbmUserToTeam\"}],\"dbName\":\"Users\"},\"ChecklistTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"TemplateID\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"TemplateName\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"TeamID\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"ChecklistTemplateToTeam\"},{\"name\":\"templateItems\",\"kind\":\"object\",\"type\":\"TemplateItem\",\"relationName\":\"ChecklistTemplateToTemplateItem\"}],\"dbName\":\"ChecklistTemplates\"},\"TemplateItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ItemID\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"TemplateID\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"Category\"},{\"name\":\"subCategory\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"SubCategory\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"Description\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"DisplayOrder\"},{\"name\":\"reportDetails\",\"kind\":\"object\",\"type\":\"ReportDetail\",\"relationName\":\"ReportDetailToTemplateItem\"},{\"name\":\"template\",\"kind\":\"object\",\"type\":\"ChecklistTemplate\",\"relationName\":\"ChecklistTemplateToTemplateItem\"}],\"dbName\":\"TemplateItems\"},\"DailyReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ReportID\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"TeamID\"},{\"name\":\"reportDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"ReportDate\"},{\"name\":\"managerName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ManagerName\"},{\"name\":\"remarks\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"Remarks\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"DailyReportToTeam\"},{\"name\":\"reportDetails\",\"kind\":\"object\",\"type\":\"ReportDetail\",\"relationName\":\"DailyReportToReportDetail\"},{\"name\":\"reportSignatures\",\"kind\":\"object\",\"type\":\"ReportSignature\",\"relationName\":\"DailyReportToReportSignature\"}],\"dbName\":\"DailyReports\"},\"ReportDetail\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"DetailID\"},{\"name\":\"reportId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ReportID\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ItemID\"},{\"name\":\"checkState\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"CheckState\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"TemplateItem\",\"relationName\":\"ReportDetailToTemplateItem\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"DailyReport\",\"relationName\":\"DailyReportToReportDetail\"}],\"dbName\":\"ReportDetails\"},\"ReportSignature\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"SignatureID\"},{\"name\":\"reportId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ReportID\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"UserID\"},{\"name\":\"signedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"SignedAt\"},{\"name\":\"signatureImage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"SignatureImage\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"DailyReport\",\"relationName\":\"DailyReportToReportSignature\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"TbmUser\",\"relationName\":\"ReportSignatureToTbmUser\"}],\"dbName\":\"ReportSignatures\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

